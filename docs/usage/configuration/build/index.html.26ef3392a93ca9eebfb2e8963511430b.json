{"head":{"title":"How to configure Phenomic build step with Webpack?","description":"If you want to change stuff like CSS or JS preprocessors or linters, you might want to edit the webpack configuration…"},"body":"<p>If you want to change stuff like CSS or JS preprocessors or linters, you might\nwant to edit the <em>webpack configuration</em> (<code>webpack.config.babel.js</code>).</p>\n<p><em>Be sure to check out the\n<a href=\"http://webpack.github.io/docs/\">webpack documentation</a>.</em></p>\n<p>⚠️ Keep in mind that Phenomic will add some pieces to the final webpack\nconfiguration to fit its requirements, but changes should not affect you.</p>\n<h3 id=\"phenomicloader\"><a href=\"#phenomicloader\" class=\"phenomic-HeadingAnchor\">#</a><code>phenomicLoader</code></h3>\n<p>One particular piece of the webpack configuration is important for Phenomic.\nThe section that defines the loader for <code>.md</code> files (or whatever you use)\nis crucial (in the default boilerplate, it's the first loader) :</p>\n<ul>\n<li>it allows you to control what text engine to use\n(default to Markdown using <a href=\"http://remark.js.org/\">remark</a>\nusing a solid <a href=\"https://github.com/MoOx/phenomic/blob/master/src/phenomic-loader-plugin-markdown-transform-body-property-to-html/index.js\">default</a>)\nand will generate JSON files, that will be consumed for the front-end,</li>\n<li>it handles the generation of the collection data,</li>\n<li>it allows you to generate some RSS feeds.</li>\n</ul>\n<p>There are two ways to send options to <code>phenomicLoader</code>:</p>\n<ul>\n<li>use webpack loader <code>query</code> option (<em>not recommended</em>, see below)</li>\n<li>use a <code>phenomic</code> section in webpack configuration.</li>\n</ul>\n<p><strong>The last method is recommended because <code>query</code> cannot contains (and ignores\nwithout warnings) things that are not JSON (eg: functions).</strong>\nAnd to use plugins (eg: custom renderer), you might need to use a function.</p>\n<p>Here is a commented part of a webpack configuration that use all options</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">//...</span>\n\n<span class=\"hljs-keyword\">import</span> pkg <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./package.json\"</span>\n<span class=\"hljs-keyword\">import</span> { phenomicLoader, phenomicLoaderPlugins } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"phenomic\"</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> makeConfig = (config = {}) => {\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-built_in\">module</span>: {\n      loaders: [\n        {\n          test: <span class=\"hljs-regexp\">/\\.md$/</span>,\n          loader: phenomicLoader,\n\n          <span class=\"hljs-comment\">// you can also define options here, but functions will be silently</span>\n          <span class=\"hljs-comment\">// ignored because how webpack works</span>\n          <span class=\"hljs-comment\">// query: {</span>\n          <span class=\"hljs-comment\">//   ...</span>\n          <span class=\"hljs-comment\">// }</span>\n        },\n        <span class=\"hljs-comment\">// ...</span>\n      ],\n    },\n\n    phenomic: {\n      <span class=\"hljs-comment\">// the context where to read .md to</span>\n      context: path.join(__dirname, config.source),\n\n      <span class=\"hljs-comment\">// below are the default values,</span>\n      <span class=\"hljs-comment\">// you don't need those by default</span>\n      plugins: [\n        phenomicLoaderPlugins.initHeadPropertyFromConfig,\n        phenomicLoaderPlugins.initHeadPropertyFromContent,\n        phenomicLoaderPlugins.initBodyPropertyFromContent,\n        phenomicLoaderPlugins.markdownInitHeadDescriptionPropertyFromContent,\n        phenomicLoaderPlugins.markdownTransformBodyPropertyToHtml,\n        <span class=\"hljs-comment\">// here you can add/replace any function you want</span>\n        <span class=\"hljs-comment\">// for examples, see</span>\n        <span class=\"hljs-comment\">// https://github.com/MoOx/phenomic/blob/master/src/</span>\n        <span class=\"hljs-comment\">// eg: if you need the raw file content in your pages,</span>\n        <span class=\"hljs-comment\">// you can add the following plugin that will add a `raw` property</span>\n        <span class=\"hljs-comment\">// phenomicLoaderPlugins.addRawProperty,</span>\n        <span class=\"hljs-comment\">// if you want raw body (text content without the front-matter)</span>\n        <span class=\"hljs-comment\">// you can add the following plugin that will add a `rawBody` property</span>\n        <span class=\"hljs-comment\">// phenomicLoaderPlugins.addRawBodyProperty,</span>\n      ]\n\n      <span class=\"hljs-comment\">// default values for `head`</span>\n      <span class=\"hljs-comment\">// this value can be defined and used by the plugin</span>\n      <span class=\"hljs-comment\">// initHeadPropertyFromConfig</span>\n      defaultHead: {\n        layout: <span class=\"hljs-string\">\"Post\"</span>,\n        comments: <span class=\"hljs-literal\">true</span>,\n      }\n\n      <span class=\"hljs-comment\">// RSS global options</span>\n      feedsOptions: {\n        title: pkg.name,\n        site_url: pkg.homepage,\n      },\n\n      feeds: {\n        <span class=\"hljs-comment\">// RSS</span>\n        <span class=\"hljs-string\">\"feed.xml\"</span>: {\n          collectionOptions: {\n            <span class=\"hljs-comment\">// here, you can filter using</span>\n            <span class=\"hljs-comment\">// phenomic/lib/enhance-collection API</span>\n            <span class=\"hljs-comment\">// see /docs/usage/collections/</span>\n            filter: { layout: <span class=\"hljs-string\">\"Post\"</span> },\n            sort: <span class=\"hljs-string\">\"date\"</span>,\n            reverse: <span class=\"hljs-literal\">true</span>,\n            limit: <span class=\"hljs-number\">20</span>,\n          },\n        },\n      },\n    },\n    <span class=\"hljs-comment\">// ...</span>\n  }\n}</code></pre>\n","__filename":"docs/usage/configuration/build.md","__url":"/docs/usage/configuration/build/","__resourceUrl":"/docs/usage/configuration/build/index.html","__dataUrl":"/docs/usage/configuration/build/index.html.26ef3392a93ca9eebfb2e8963511430b.json"}