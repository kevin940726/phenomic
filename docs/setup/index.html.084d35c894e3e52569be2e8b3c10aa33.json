{"head":{"title":"How to setup Phenomic","description":"Phenomic require at least Node.js@^4.2.0 / npm@^3.0.0.   We recommend you to use nvm to manage different versions of node. A minimal‚Ä¶"},"body":"<p>Phenomic require at least\n<strong><a href=\"http://nodejs.org/\">Node.js@^4.2.0</a> / <a href=\"http://npmjs.com/\">npm@^3.0.0</a></strong>.<br>\nWe recommend you to use <a href=\"https://github.com/creationix/nvm\">nvm</a> to manage\ndifferent versions of node.</p>\n<p><strong>A minimal boilerplate is required, in order to provide you some\nflexibility.</strong> But don't worry, a command will set it up for you.</p>\n<h2 id=\"one-command-setup\"><a href=\"#one-command-setup\" class=\"phenomic-HeadingAnchor\">#</a>One command setup</h2>\n<p>üöÄ With those instructions, you should have a new clean project, that will\nmagically open itself in your browser!</p>\n<h3 id=\"macos--linux\"><a href=\"#macos--linux\" class=\"phenomic-HeadingAnchor\">#</a>macOS / Linux</h3>\n<pre><code class=\"hljs language-sh\">DIR=your-website-folder &#x26;&#x26; mkdir <span class=\"hljs-variable\">$DIR</span> &#x26;&#x26; <span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">$DIR</span> &#x26;&#x26; mkdir node_modules &#x26;&#x26; \\\nnpm i phenomic &#x26;&#x26; ./node_modules/.bin/phenomic setup &#x26;&#x26; npm i &#x26;&#x26; npm start</code></pre>\n<h3 id=\"windows\"><a href=\"#windows\" class=\"phenomic-HeadingAnchor\">#</a>Windows</h3>\n<pre><code class=\"hljs language-cmd\"><span class=\"hljs-built_in\">SET</span> <span class=\"hljs-built_in\">DIR</span>=your-website-folder &#x26;&#x26; <span class=\"hljs-built_in\">mkdir</span> <span class=\"hljs-variable\">%DIR%</span> &#x26;&#x26; <span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">%DIR%</span> &#x26;&#x26; <span class=\"hljs-built_in\">mkdir</span> node_modules &#x26;&#x26; ^\nnpm i phenomic &#x26;&#x26; ./node_modules/.bin/phenomic setup &#x26;&#x26; npm i &#x26;&#x26; npm <span class=\"hljs-built_in\">start</span></code></pre>\n<p>If you have questions on \"why is the setup command so long\", you will find\nanswer below üòâ.</p>\n<p>üöÄ <strong>When you get the hello world, it's time to take a look to our\n<a href=\"getting-started/\">Getting Started</a> page and to <a href=\"../usage/\">start hacking!</a>.</strong></p>\n<hr>\n<h2 id=\"detailed-setup\"><a href=\"#detailed-setup\" class=\"phenomic-HeadingAnchor\">#</a>Detailed setup</h2>\n<h3 id=\"create-a-new-folder\"><a href=\"#create-a-new-folder\" class=\"phenomic-HeadingAnchor\">#</a>Create a new folder</h3>\n<p>That's an easy step.</p>\n<pre><code class=\"hljs language-sh\">DIR=your-website-folder\nmkdir <span class=\"hljs-variable\">$DIR</span> &#x26;&#x26; <span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">$DIR</span></code></pre>\n<h3 id=\"get-phenomic\"><a href=\"#get-phenomic\" class=\"phenomic-HeadingAnchor\">#</a>Get Phenomic</h3>\n<p>You will need to install Phenomic first, to generate the required boilerplate.\nYou can install Phenomic from npm to get latest stable version, or install\nit from git to get latest bleeding edge updates.</p>\n<p><em>By installing it locally, you ensure that several projects can rely on\ndifferent versions of Phenomic.\nAnyway, Phenomic will probably not work installed globally.</em></p>\n<pre><code class=\"hljs language-sh\">mkdir node_modules</code></pre>\n<p><em>This command is to be sure that phenomic will be installed in the current\nfolder, otherwise, npm might try to install it in a parent folder until it\nfinds a <code>node_modules</code> or a <code>package.json</code>, up to your HOME folder.</em></p>\n<h4 id=\"install-from-npm\"><a href=\"#install-from-npm\" class=\"phenomic-HeadingAnchor\">#</a>Install from npm</h4>\n<pre><code class=\"hljs language-sh\">npm install phenomic</code></pre>\n<ul>\n<li><code>--save[-dev]</code> is useless because there is no <code>package.json</code> yet.\nThis will be be handled by the setup command below.</li>\n<li>You can ignore error about missing <code>package.json</code> and warnings about\nmissing peer dependencies.</li>\n</ul>\n<h4 id=\"install-from-git\"><a href=\"#install-from-git\" class=\"phenomic-HeadingAnchor\">#</a>Install from git</h4>\n<p>To install from git, you will need to get some deps to transpile sources</p>\n<pre><code class=\"hljs language-sh\">npm install babel-cli babel-preset-react babel-preset-es2015 babel-preset-stage-1 babel-plugin-flow-react-proptypes\nnpm install https://github.com/MoOx/phenomic.git</code></pre>\n<h3 id=\"setup-boilerplate\"><a href=\"#setup-boilerplate\" class=\"phenomic-HeadingAnchor\">#</a>Setup boilerplate</h3>\n<p><strong>Notice:</strong> This step will create (and overwrite) any existing <code>package.json</code>.</p>\n<pre><code class=\"hljs language-sh\">./node_modules/.bin/phenomic setup</code></pre>\n<p><strong>‚ö†Ô∏è If you got errors here, please double check that you have required version of\nNode and NPM specified at the top of this page.</strong></p>\n<p>After you answer some questions, your boilerplate is ready.  </p>\n<p><em>Tip:</em> You can open <code>package.json</code> and adjust some values to fit your needs.</p>\n<p><em>Check out <a href=\"../usage/configuration/\">Configuration</a> for more information about\nthe configuration options.</em></p>\n<h3 id=\"install-dependencies\"><a href=\"#install-dependencies\" class=\"phenomic-HeadingAnchor\">#</a>Install dependencies</h3>\n<p>When you are done the setup, it's time to get all dependencies.</p>\n<pre><code class=\"hljs language-sh\">npm install</code></pre>\n<p>npm will install some peer dependencies for you; by doing this we ensure that\n<em>you</em> control the dependencies that you are using. This way you are totally aware\nof what you use and are not locked in to using packages that you don't want to.</p>\n<p>Now it's time to...</p>\n<h3 id=\"start-the-engine\"><a href=\"#start-the-engine\" class=\"phenomic-HeadingAnchor\">#</a>Start the engine</h3>\n<pre><code class=\"hljs language-sh\">npm start</code></pre>\n<p>It's that simple.</p>\n<p>This command calls the <code>start</code> command from the <code>scripts</code> section of your\n<code>package.json</code>.\nAs you can see this will execute <code>phenomic start</code> command that will load the\nconfiguration and run the development mode.</p>\n<p>Now just wait for your browser to show up (yes this development mode should open\nyour development server in your favorite browser).</p>\n<hr>\n<p>üöÄ <strong>When you get the hello world, it's time to take a look to our\n<a href=\"../getting-started/\">Getting Started</a> page and to <a href=\"../usage/\">start hacking!</a>.</strong></p>\n","__filename":"docs/setup.md","__url":"/docs/setup/","__resourceUrl":"/docs/setup/index.html","__dataUrl":"/docs/setup/index.html.084d35c894e3e52569be2e8b3c10aa33.json"}